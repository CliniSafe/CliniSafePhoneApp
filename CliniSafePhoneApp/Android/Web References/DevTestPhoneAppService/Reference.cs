//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CliniSafePhoneApp.Android.DevTestPhoneAppService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PhoneAppSoap", Namespace="http://clinisafe.com/phoneapp")]
    public partial class PhoneApp : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback EchoOperationCompleted;
        
        private HandshakeHeader handshakeHeaderValueField;
        
        private System.Threading.SendOrPostCallback HandshakeOperationCompleted;
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesForProjectForMonitorUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResearchSitesForProjectForInvestigtorUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrialStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrailDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckGenericDrugNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindGenericDrugNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckGenericDrugNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDrugsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PhoneApp() {
            this.Url = "https://developmenttesting.clinisafesandbox.com/webservices/phoneapp.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public HandshakeHeader HandshakeHeaderValue {
            get {
                return this.handshakeHeaderValueField;
            }
            set {
                this.handshakeHeaderValueField = value;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event HelloErrorCompletedEventHandler HelloErrorCompleted;
        
        /// <remarks/>
        public event EchoCompletedEventHandler EchoCompleted;
        
        /// <remarks/>
        public event HandshakeCompletedEventHandler HandshakeCompleted;
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event GetProjectsForUserCompletedEventHandler GetProjectsForUserCompleted;
        
        /// <remarks/>
        public event GetCountriesForProjectForMonitorUserCompletedEventHandler GetCountriesForProjectForMonitorUserCompleted;
        
        /// <remarks/>
        public event GetResearchSitesForProjectForInvestigtorUserCompletedEventHandler GetResearchSitesForProjectForInvestigtorUserCompleted;
        
        /// <remarks/>
        public event CheckTrialStatusCompletedEventHandler CheckTrialStatusCompleted;
        
        /// <remarks/>
        public event GetTrailDetailsCompletedEventHandler GetTrailDetailsCompleted;
        
        /// <remarks/>
        public event CheckGenericDrugNameCompletedEventHandler CheckGenericDrugNameCompleted;
        
        /// <remarks/>
        public event FindGenericDrugNameCompletedEventHandler FindGenericDrugNameCompleted;
        
        /// <remarks/>
        public event CheckGenericDrugNamesCompletedEventHandler CheckGenericDrugNamesCompleted;
        
        /// <remarks/>
        public event GetQuestionsCompletedEventHandler GetQuestionsCompleted;
        
        /// <remarks/>
        public event ValidateDrugsCompletedEventHandler ValidateDrugsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/HelloWorld", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/HelloError", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HelloError() {
            this.Invoke("HelloError", new object[0]);
        }
        
        /// <remarks/>
        public void HelloErrorAsync() {
            this.HelloErrorAsync(null);
        }
        
        /// <remarks/>
        public void HelloErrorAsync(object userState) {
            if ((this.HelloErrorOperationCompleted == null)) {
                this.HelloErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloErrorOperationCompleted);
            }
            this.InvokeAsync("HelloError", new object[0], this.HelloErrorOperationCompleted, userState);
        }
        
        private void OnHelloErrorOperationCompleted(object arg) {
            if ((this.HelloErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/Echo", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Echo(string Input) {
            object[] results = this.Invoke("Echo", new object[] {
                        Input});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EchoAsync(string Input) {
            this.EchoAsync(Input, null);
        }
        
        /// <remarks/>
        public void EchoAsync(string Input, object userState) {
            if ((this.EchoOperationCompleted == null)) {
                this.EchoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEchoOperationCompleted);
            }
            this.InvokeAsync("Echo", new object[] {
                        Input}, this.EchoOperationCompleted, userState);
        }
        
        private void OnEchoOperationCompleted(object arg) {
            if ((this.EchoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EchoCompleted(this, new EchoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HandshakeHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/Handshake", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Handshake() {
            object[] results = this.Invoke("Handshake", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HandshakeAsync() {
            this.HandshakeAsync(null);
        }
        
        /// <remarks/>
        public void HandshakeAsync(object userState) {
            if ((this.HandshakeOperationCompleted == null)) {
                this.HandshakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandshakeOperationCompleted);
            }
            this.InvokeAsync("Handshake", new object[0], this.HandshakeOperationCompleted, userState);
        }
        
        private void OnHandshakeOperationCompleted(object arg) {
            if ((this.HandshakeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandshakeCompleted(this, new HandshakeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/Authenticate", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Authenticate() {
            object[] results = this.Invoke("Authenticate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync() {
            this.AuthenticateAsync(null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[0], this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/GetProjectsForUser", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectsForUser() {
            object[] results = this.Invoke("GetProjectsForUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsForUserAsync() {
            this.GetProjectsForUserAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectsForUserAsync(object userState) {
            if ((this.GetProjectsForUserOperationCompleted == null)) {
                this.GetProjectsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsForUserOperationCompleted);
            }
            this.InvokeAsync("GetProjectsForUser", new object[0], this.GetProjectsForUserOperationCompleted, userState);
        }
        
        private void OnGetProjectsForUserOperationCompleted(object arg) {
            if ((this.GetProjectsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsForUserCompleted(this, new GetProjectsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/GetCountriesForProjectForMonitorUser", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountriesForProjectForMonitorUser(int ProjectID) {
            object[] results = this.Invoke("GetCountriesForProjectForMonitorUser", new object[] {
                        ProjectID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesForProjectForMonitorUserAsync(int ProjectID) {
            this.GetCountriesForProjectForMonitorUserAsync(ProjectID, null);
        }
        
        /// <remarks/>
        public void GetCountriesForProjectForMonitorUserAsync(int ProjectID, object userState) {
            if ((this.GetCountriesForProjectForMonitorUserOperationCompleted == null)) {
                this.GetCountriesForProjectForMonitorUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesForProjectForMonitorUserOperationCompleted);
            }
            this.InvokeAsync("GetCountriesForProjectForMonitorUser", new object[] {
                        ProjectID}, this.GetCountriesForProjectForMonitorUserOperationCompleted, userState);
        }
        
        private void OnGetCountriesForProjectForMonitorUserOperationCompleted(object arg) {
            if ((this.GetCountriesForProjectForMonitorUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesForProjectForMonitorUserCompleted(this, new GetCountriesForProjectForMonitorUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/GetResearchSitesForProjectForInvestigtorUser", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetResearchSitesForProjectForInvestigtorUser(int ProjectID) {
            object[] results = this.Invoke("GetResearchSitesForProjectForInvestigtorUser", new object[] {
                        ProjectID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetResearchSitesForProjectForInvestigtorUserAsync(int ProjectID) {
            this.GetResearchSitesForProjectForInvestigtorUserAsync(ProjectID, null);
        }
        
        /// <remarks/>
        public void GetResearchSitesForProjectForInvestigtorUserAsync(int ProjectID, object userState) {
            if ((this.GetResearchSitesForProjectForInvestigtorUserOperationCompleted == null)) {
                this.GetResearchSitesForProjectForInvestigtorUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResearchSitesForProjectForInvestigtorUserOperationCompleted);
            }
            this.InvokeAsync("GetResearchSitesForProjectForInvestigtorUser", new object[] {
                        ProjectID}, this.GetResearchSitesForProjectForInvestigtorUserOperationCompleted, userState);
        }
        
        private void OnGetResearchSitesForProjectForInvestigtorUserOperationCompleted(object arg) {
            if ((this.GetResearchSitesForProjectForInvestigtorUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResearchSitesForProjectForInvestigtorUserCompleted(this, new GetResearchSitesForProjectForInvestigtorUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/CheckTrialStatus", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckTrialStatus(int theTrialID) {
            object[] results = this.Invoke("CheckTrialStatus", new object[] {
                        theTrialID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrialStatusAsync(int theTrialID) {
            this.CheckTrialStatusAsync(theTrialID, null);
        }
        
        /// <remarks/>
        public void CheckTrialStatusAsync(int theTrialID, object userState) {
            if ((this.CheckTrialStatusOperationCompleted == null)) {
                this.CheckTrialStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrialStatusOperationCompleted);
            }
            this.InvokeAsync("CheckTrialStatus", new object[] {
                        theTrialID}, this.CheckTrialStatusOperationCompleted, userState);
        }
        
        private void OnCheckTrialStatusOperationCompleted(object arg) {
            if ((this.CheckTrialStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrialStatusCompleted(this, new CheckTrialStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/GetTrailDetails", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetTrialDetailsOutput GetTrailDetails(int theTrialID) {
            object[] results = this.Invoke("GetTrailDetails", new object[] {
                        theTrialID});
            return ((GetTrialDetailsOutput)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrailDetailsAsync(int theTrialID) {
            this.GetTrailDetailsAsync(theTrialID, null);
        }
        
        /// <remarks/>
        public void GetTrailDetailsAsync(int theTrialID, object userState) {
            if ((this.GetTrailDetailsOperationCompleted == null)) {
                this.GetTrailDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrailDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTrailDetails", new object[] {
                        theTrialID}, this.GetTrailDetailsOperationCompleted, userState);
        }
        
        private void OnGetTrailDetailsOperationCompleted(object arg) {
            if ((this.GetTrailDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrailDetailsCompleted(this, new GetTrailDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/CheckGenericDrugName", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckGenericDrugName(int theTrialID, string GenericDrugName) {
            object[] results = this.Invoke("CheckGenericDrugName", new object[] {
                        theTrialID,
                        GenericDrugName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckGenericDrugNameAsync(int theTrialID, string GenericDrugName) {
            this.CheckGenericDrugNameAsync(theTrialID, GenericDrugName, null);
        }
        
        /// <remarks/>
        public void CheckGenericDrugNameAsync(int theTrialID, string GenericDrugName, object userState) {
            if ((this.CheckGenericDrugNameOperationCompleted == null)) {
                this.CheckGenericDrugNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckGenericDrugNameOperationCompleted);
            }
            this.InvokeAsync("CheckGenericDrugName", new object[] {
                        theTrialID,
                        GenericDrugName}, this.CheckGenericDrugNameOperationCompleted, userState);
        }
        
        private void OnCheckGenericDrugNameOperationCompleted(object arg) {
            if ((this.CheckGenericDrugNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckGenericDrugNameCompleted(this, new CheckGenericDrugNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/FindGenericDrugName", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindGenericDrugName(int theTrialID, string GenericDrugNameToFind) {
            object[] results = this.Invoke("FindGenericDrugName", new object[] {
                        theTrialID,
                        GenericDrugNameToFind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindGenericDrugNameAsync(int theTrialID, string GenericDrugNameToFind) {
            this.FindGenericDrugNameAsync(theTrialID, GenericDrugNameToFind, null);
        }
        
        /// <remarks/>
        public void FindGenericDrugNameAsync(int theTrialID, string GenericDrugNameToFind, object userState) {
            if ((this.FindGenericDrugNameOperationCompleted == null)) {
                this.FindGenericDrugNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindGenericDrugNameOperationCompleted);
            }
            this.InvokeAsync("FindGenericDrugName", new object[] {
                        theTrialID,
                        GenericDrugNameToFind}, this.FindGenericDrugNameOperationCompleted, userState);
        }
        
        private void OnFindGenericDrugNameOperationCompleted(object arg) {
            if ((this.FindGenericDrugNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindGenericDrugNameCompleted(this, new FindGenericDrugNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/CheckGenericDrugNames", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckGenericDrugNames(int theTrialID, string DrugsToTest) {
            object[] results = this.Invoke("CheckGenericDrugNames", new object[] {
                        theTrialID,
                        DrugsToTest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckGenericDrugNamesAsync(int theTrialID, string DrugsToTest) {
            this.CheckGenericDrugNamesAsync(theTrialID, DrugsToTest, null);
        }
        
        /// <remarks/>
        public void CheckGenericDrugNamesAsync(int theTrialID, string DrugsToTest, object userState) {
            if ((this.CheckGenericDrugNamesOperationCompleted == null)) {
                this.CheckGenericDrugNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckGenericDrugNamesOperationCompleted);
            }
            this.InvokeAsync("CheckGenericDrugNames", new object[] {
                        theTrialID,
                        DrugsToTest}, this.CheckGenericDrugNamesOperationCompleted, userState);
        }
        
        private void OnCheckGenericDrugNamesOperationCompleted(object arg) {
            if ((this.CheckGenericDrugNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckGenericDrugNamesCompleted(this, new CheckGenericDrugNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/GetQuestions", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQuestions(int theTrialID) {
            object[] results = this.Invoke("GetQuestions", new object[] {
                        theTrialID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionsAsync(int theTrialID) {
            this.GetQuestionsAsync(theTrialID, null);
        }
        
        /// <remarks/>
        public void GetQuestionsAsync(int theTrialID, object userState) {
            if ((this.GetQuestionsOperationCompleted == null)) {
                this.GetQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionsOperationCompleted);
            }
            this.InvokeAsync("GetQuestions", new object[] {
                        theTrialID}, this.GetQuestionsOperationCompleted, userState);
        }
        
        private void OnGetQuestionsOperationCompleted(object arg) {
            if ((this.GetQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionsCompleted(this, new GetQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinisafe.com/phoneapp/ValidateDrugs", RequestNamespace="http://clinisafe.com/phoneapp", ResponseNamespace="http://clinisafe.com/phoneapp", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ValidateDrugsOutputs ValidateDrugs(ValidateDrugsInputs DrugValidatorInputs) {
            object[] results = this.Invoke("ValidateDrugs", new object[] {
                        DrugValidatorInputs});
            return ((ValidateDrugsOutputs)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateDrugsAsync(ValidateDrugsInputs DrugValidatorInputs) {
            this.ValidateDrugsAsync(DrugValidatorInputs, null);
        }
        
        /// <remarks/>
        public void ValidateDrugsAsync(ValidateDrugsInputs DrugValidatorInputs, object userState) {
            if ((this.ValidateDrugsOperationCompleted == null)) {
                this.ValidateDrugsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDrugsOperationCompleted);
            }
            this.InvokeAsync("ValidateDrugs", new object[] {
                        DrugValidatorInputs}, this.ValidateDrugsOperationCompleted, userState);
        }
        
        private void OnValidateDrugsOperationCompleted(object arg) {
            if ((this.ValidateDrugsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDrugsCompleted(this, new ValidateDrugsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://clinisafe.com/phoneapp")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://clinisafe.com/phoneapp", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private string cPAVersionField;
        
        private bool hasIssuesField;
        
        private bool maintenanceModeField;
        
        private bool cPAVersionExactField;
        
        private bool cPANeedsUpdatingField;
        
        private bool authenticatedField;
        
        private bool usernamePasswordValidField;
        
        private bool userTypeValidField;
        
        private bool userMobileTrainedField;
        
        private bool trialActiveField;
        
        private int messageCodeField;
        
        private string messageField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string CPAVersion {
            get {
                return this.cPAVersionField;
            }
            set {
                this.cPAVersionField = value;
            }
        }
        
        /// <remarks/>
        public bool HasIssues {
            get {
                return this.hasIssuesField;
            }
            set {
                this.hasIssuesField = value;
            }
        }
        
        /// <remarks/>
        public bool MaintenanceMode {
            get {
                return this.maintenanceModeField;
            }
            set {
                this.maintenanceModeField = value;
            }
        }
        
        /// <remarks/>
        public bool CPAVersionExact {
            get {
                return this.cPAVersionExactField;
            }
            set {
                this.cPAVersionExactField = value;
            }
        }
        
        /// <remarks/>
        public bool CPANeedsUpdating {
            get {
                return this.cPANeedsUpdatingField;
            }
            set {
                this.cPANeedsUpdatingField = value;
            }
        }
        
        /// <remarks/>
        public bool Authenticated {
            get {
                return this.authenticatedField;
            }
            set {
                this.authenticatedField = value;
            }
        }
        
        /// <remarks/>
        public bool UsernamePasswordValid {
            get {
                return this.usernamePasswordValidField;
            }
            set {
                this.usernamePasswordValidField = value;
            }
        }
        
        /// <remarks/>
        public bool UserTypeValid {
            get {
                return this.userTypeValidField;
            }
            set {
                this.userTypeValidField = value;
            }
        }
        
        /// <remarks/>
        public bool UserMobileTrained {
            get {
                return this.userMobileTrainedField;
            }
            set {
                this.userMobileTrainedField = value;
            }
        }
        
        /// <remarks/>
        public bool TrialActive {
            get {
                return this.trialActiveField;
            }
            set {
                this.trialActiveField = value;
            }
        }
        
        /// <remarks/>
        public int MessageCode {
            get {
                return this.messageCodeField;
            }
            set {
                this.messageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://clinisafe.com/phoneapp")]
    public partial class ValidateDrugsOutputs {
        
        private string hTMLResultField;
        
        private string xMLResultField;
        
        private string xMLDrugRuleMessagesField;
        
        /// <remarks/>
        public string HTMLResult {
            get {
                return this.hTMLResultField;
            }
            set {
                this.hTMLResultField = value;
            }
        }
        
        /// <remarks/>
        public string XMLResult {
            get {
                return this.xMLResultField;
            }
            set {
                this.xMLResultField = value;
            }
        }
        
        /// <remarks/>
        public string XMLDrugRuleMessages {
            get {
                return this.xMLDrugRuleMessagesField;
            }
            set {
                this.xMLDrugRuleMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://clinisafe.com/phoneapp")]
    public partial class ValidateDrugsInputs {
        
        private int project_IDField;
        
        private int theTrialIDField;
        
        private int researchSiteIDField;
        
        private int patientIDField;
        
        private string drugNamesField;
        
        private string questionsAndAnswersField;
        
        /// <remarks/>
        public int Project_ID {
            get {
                return this.project_IDField;
            }
            set {
                this.project_IDField = value;
            }
        }
        
        /// <remarks/>
        public int theTrialID {
            get {
                return this.theTrialIDField;
            }
            set {
                this.theTrialIDField = value;
            }
        }
        
        /// <remarks/>
        public int ResearchSiteID {
            get {
                return this.researchSiteIDField;
            }
            set {
                this.researchSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public int PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNames {
            get {
                return this.drugNamesField;
            }
            set {
                this.drugNamesField = value;
            }
        }
        
        /// <remarks/>
        public string QuestionsAndAnswers {
            get {
                return this.questionsAndAnswersField;
            }
            set {
                this.questionsAndAnswersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://clinisafe.com/phoneapp")]
    public partial class GetTrialDetailsOutput {
        
        private string shortTitleField;
        
        private string fullTitleField;
        
        private string countryField;
        
        private string languageField;
        
        private string userMessageField;
        
        private string statusField;
        
        private bool hasQuestionsField;
        
        /// <remarks/>
        public string ShortTitle {
            get {
                return this.shortTitleField;
            }
            set {
                this.shortTitleField = value;
            }
        }
        
        /// <remarks/>
        public string FullTitle {
            get {
                return this.fullTitleField;
            }
            set {
                this.fullTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string UserMessage {
            get {
                return this.userMessageField;
            }
            set {
                this.userMessageField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool HasQuestions {
            get {
                return this.hasQuestionsField;
            }
            set {
                this.hasQuestionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://clinisafe.com/phoneapp")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://clinisafe.com/phoneapp", IsNullable=false)]
    public partial class HandshakeHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string cPAVersionField;
        
        private bool hasIssuesField;
        
        private bool maintenanceModeField;
        
        private bool cPAVersionExactField;
        
        private bool cPANeedsUpdatingField;
        
        private int messageCodeField;
        
        private string messageField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string CPAVersion {
            get {
                return this.cPAVersionField;
            }
            set {
                this.cPAVersionField = value;
            }
        }
        
        /// <remarks/>
        public bool HasIssues {
            get {
                return this.hasIssuesField;
            }
            set {
                this.hasIssuesField = value;
            }
        }
        
        /// <remarks/>
        public bool MaintenanceMode {
            get {
                return this.maintenanceModeField;
            }
            set {
                this.maintenanceModeField = value;
            }
        }
        
        /// <remarks/>
        public bool CPAVersionExact {
            get {
                return this.cPAVersionExactField;
            }
            set {
                this.cPAVersionExactField = value;
            }
        }
        
        /// <remarks/>
        public bool CPANeedsUpdating {
            get {
                return this.cPANeedsUpdatingField;
            }
            set {
                this.cPANeedsUpdatingField = value;
            }
        }
        
        /// <remarks/>
        public int MessageCode {
            get {
                return this.messageCodeField;
            }
            set {
                this.messageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EchoCompletedEventHandler(object sender, EchoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EchoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EchoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HandshakeCompletedEventHandler(object sender, HandshakeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HandshakeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HandshakeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProjectsForUserCompletedEventHandler(object sender, GetProjectsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCountriesForProjectForMonitorUserCompletedEventHandler(object sender, GetCountriesForProjectForMonitorUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesForProjectForMonitorUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesForProjectForMonitorUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetResearchSitesForProjectForInvestigtorUserCompletedEventHandler(object sender, GetResearchSitesForProjectForInvestigtorUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResearchSitesForProjectForInvestigtorUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResearchSitesForProjectForInvestigtorUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckTrialStatusCompletedEventHandler(object sender, CheckTrialStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrialStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrialStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTrailDetailsCompletedEventHandler(object sender, GetTrailDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrailDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrailDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTrialDetailsOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTrialDetailsOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckGenericDrugNameCompletedEventHandler(object sender, CheckGenericDrugNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckGenericDrugNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckGenericDrugNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FindGenericDrugNameCompletedEventHandler(object sender, FindGenericDrugNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindGenericDrugNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindGenericDrugNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckGenericDrugNamesCompletedEventHandler(object sender, CheckGenericDrugNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckGenericDrugNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckGenericDrugNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetQuestionsCompletedEventHandler(object sender, GetQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateDrugsCompletedEventHandler(object sender, ValidateDrugsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateDrugsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateDrugsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValidateDrugsOutputs Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValidateDrugsOutputs)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591